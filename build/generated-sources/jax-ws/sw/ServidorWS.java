
package sw;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServidorWS", targetNamespace = "http://SW/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServidorWS {


    /**
     * 
     * @return
     *     returns java.util.List<sw.Sucursal>
     */
    @WebMethod(operationName = "Mostrarsucurs")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Mostrarsucurs", targetNamespace = "http://SW/", className = "sw.Mostrarsucurs")
    @ResponseWrapper(localName = "MostrarsucursResponse", targetNamespace = "http://SW/", className = "sw.MostrarsucursResponse")
    @Action(input = "http://SW/ServidorWS/MostrarsucursRequest", output = "http://SW/ServidorWS/MostrarsucursResponse")
    public List<Sucursal> mostrarsucurs();

    /**
     * 
     * @return
     *     returns java.util.List<sw.TipoMedicamento>
     */
    @WebMethod(operationName = "Mostratipos")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Mostratipos", targetNamespace = "http://SW/", className = "sw.Mostratipos")
    @ResponseWrapper(localName = "MostratiposResponse", targetNamespace = "http://SW/", className = "sw.MostratiposResponse")
    @Action(input = "http://SW/ServidorWS/MostratiposRequest", output = "http://SW/ServidorWS/MostratiposResponse")
    public List<TipoMedicamento> mostratipos();

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://SW/", className = "sw.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://SW/", className = "sw.HelloResponse")
    @Action(input = "http://SW/ServidorWS/helloRequest", output = "http://SW/ServidorWS/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param parameter
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "EliminarMedicamento")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarMedicamento", targetNamespace = "http://SW/", className = "sw.EliminarMedicamento")
    @ResponseWrapper(localName = "EliminarMedicamentoResponse", targetNamespace = "http://SW/", className = "sw.EliminarMedicamentoResponse")
    @Action(input = "http://SW/ServidorWS/EliminarMedicamentoRequest", output = "http://SW/ServidorWS/EliminarMedicamentoResponse")
    public Boolean eliminarMedicamento(
        @WebParam(name = "parameter", targetNamespace = "")
        Medicamento parameter);

    /**
     * 
     * @return
     *     returns java.util.List<sw.Farmacia>
     */
    @WebMethod(operationName = "Mostrarfarma")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Mostrarfarma", targetNamespace = "http://SW/", className = "sw.Mostrarfarma")
    @ResponseWrapper(localName = "MostrarfarmaResponse", targetNamespace = "http://SW/", className = "sw.MostrarfarmaResponse")
    @Action(input = "http://SW/ServidorWS/MostrarfarmaRequest", output = "http://SW/ServidorWS/MostrarfarmaResponse")
    public List<Farmacia> mostrarfarma();

    /**
     * 
     * @return
     *     returns java.util.List<sw.Medicamento>
     */
    @WebMethod(operationName = "Mostramedica")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Mostramedica", targetNamespace = "http://SW/", className = "sw.Mostramedica")
    @ResponseWrapper(localName = "MostramedicaResponse", targetNamespace = "http://SW/", className = "sw.MostramedicaResponse")
    @Action(input = "http://SW/ServidorWS/MostramedicaRequest", output = "http://SW/ServidorWS/MostramedicaResponse")
    public List<Medicamento> mostramedica();

}
